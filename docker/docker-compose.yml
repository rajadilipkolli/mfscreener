services:

  postgresqldb:
    image: postgres:17.3-alpine
    hostname: postgresqldb
    container_name: postgresqldb
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    environment:
      - POSTGRES_USER=appuser
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=appdb
    ports:
      - "5432:5432"
    networks:
      - mfscreener-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    environment:
      - PGADMIN_DEFAULT_EMAIL=pgadmin4@pgadmin.org
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    ports:
      - "5050:80"
    depends_on:
      postgresqldb:
        condition: service_started
    volumes:
      - ./docker_pgadmin_servers.json:/pgadmin4/servers.json
    entrypoint:
      - "/bin/sh"
      - "-c"
      - "/bin/echo 'postgresqldb:5432:*:appuser:secret' > /tmp/pgpassfile && chmod 600 /tmp/pgpassfile && /entrypoint.sh"
    restart: unless-stopped
    networks:
      - mfscreener-network

  zipkin-server:
    image: openzipkin/zipkin
    container_name: zipkin-server
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    deploy:
      resources:
        limits:
          memory: 2048m
    expose:
      - "9411"
    ports:
      - "9411:9411"
    networks:
      - mfscreener-network

  redis:
    image: 'redis:7.4.2-alpine'
    container_name: redis
    extra_hosts: [ 'host.docker.internal:host-gateway' ]
    ports:
      - "6379:6379"
    volumes:
      - 'redis_data:/data:rw'
    healthcheck:
      test: redis-cli ping
      interval: 3s
      timeout: 5s
      retries: 5
    networks:
      - mfscreener-network

networks:
  mfscreener-network:
    driver: bridge
volumes:
  redis_data: