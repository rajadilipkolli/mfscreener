plugins {
    id 'org.springframework.boot' version '3.0.0-RC2'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.graalvm.buildtools.native' version '0.9.17'
    id 'java'
    id "org.sonarqube" version "3.5.0.2730"
    id "com.diffplug.spotless" version "6.11.0"
}

sonarqube {
    properties {
        property "sonar.projectKey", "rajadilipkolli_mfscreener"
        property "sonar.organization", "rajadilipkolli"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

group = 'com.example.mfscreener'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
  mavenCentral()
  maven { url 'https://repo.spring.io/milestone' }
}

ext {
    set('testcontainersVersion', "1.17.5")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.0-RC1'
    implementation 'net.ttddyy:datasource-proxy:1.8.1'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

test {
    useJUnitPlatform()
}

spotless {
  sql{
      target 'src/main/resources/**/*.sql' // have to set manually
      dbeaver()
  }
  java {
      removeUnusedImports()
      googleJavaFormat('1.15.0')
        .aosp()
        .reflowLongStrings()
        .groupArtifact('com.google.googlejavaformat:google-java-format')
      // fix formatting of type annotations
      formatAnnotations()
      // make sure every file has the following copyright header.
      // optionally, Spotless can set copyright years by digging
      // through git history (see "license" section below)
      licenseHeader '/* Licensed under Apache-2.0 $YEAR. */'
  }
}